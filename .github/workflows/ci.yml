name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint with Ruff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read Python version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run Ruff check
        run: |
          uv run ruff check . --exit-non-zero-on-fix

      - name: Run Ruff format check
        run: |
          uv run ruff format . --check

  type-check:
    name: Type Check with Pyrefly
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Read Python version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run Pyrefly
        run: |
          uv run pyrefly check

  test:
    name: Run test
    runs-on: ubuntu-latest
    needs: [lint, type-check]
    services:
      postgres:
        image: postgres:16
        env:
          # NOTE: This is a lab/learning project, so we use plaintext passwords
          # For production, use environment variables or secrets management
          POSTGRES_USER: py_arch_lab
          POSTGRES_PASSWORD: py_arch_lab
          POSTGRES_DB: shopping_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Read Python version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Setup environment variables for database migration
        run: |
          cp .env.example .env

      - name: Run database migrations
        run: |
          uv run python manage.py migrate

      - name: Run test
        run: |
          make t
